{"version":3,"sources":["images/resume.pdf","images/headshot.jpg","images/BTS-tile.jpg","Pages/Home.js","Components/Cards/Project-1/Project-1.js","Pages/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomePage","className","src","ProfileImage","alt","Row","Col","xs","md","href","dcResume","target","rel","P1Card","BTS","ProjectsPage","App","basename","to","exact","path","component","Home","Projects","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,+UCuC5BC,MA/Bf,WACI,OACI,yBAAKC,UAAU,eACX,6BACI,wBAAIA,UAAU,YAAd,aACA,wBAAIA,UAAU,aAAd,gBAEJ,6BACI,yBAAKC,IAAKC,IAAcC,IAAI,MAAMH,UAAU,gBAEhD,yBAAKA,UAAU,gBACX,kBAACI,EAAA,EAAD,CAAKJ,UAAU,6BACX,uBAAGA,UAAU,aAAb,mBACA,kBAACK,EAAA,EAAD,CAAKL,UAAU,YAAYM,GAAI,EAAGC,GAAI,IAClC,4XAGA,uBAAGP,UAAU,iBAAb,aACI,uBAAGQ,KAAMC,IAAUC,OAAO,SAASC,IAAI,sBAAsBX,UAAU,SAAvE,YALR,MAOQ,uBAAGQ,KAAK,yDAAyDE,OAAO,SAASC,IAAI,sBAAsBX,UAAU,SAArH,cAPR,MASQ,uBAAGQ,KAAK,+BAA+BE,OAAO,SAASC,IAAI,sBAAsBX,UAAU,SAA3F,eAIhB,yBAAKA,UAAU,kB,+BCFZY,MA1Bf,WACI,OACI,6BACI,yBAAKZ,UAAU,cACX,uBAAGQ,KAAK,+CAA+CE,OAAO,SAASC,IAAI,uBAAsB,yBAAKV,IAAKY,IAAKV,IAAI,MAAMH,UAAU,gBAExI,yBAAKA,UAAU,eACX,kBAACI,EAAA,EAAD,CAAKJ,UAAU,cAAcM,GAAI,EAAGC,GAAI,IACpC,+GAIJ,kBAACH,EAAA,EAAD,CAAKJ,UAAU,QACX,4BACI,0CACA,qCACA,oCACA,2CACA,oDCVTc,MARf,WACI,OACI,yBAAKd,UAAU,YACX,kBAAC,EAAD,QCgBGe,G,uLAhBX,OACE,kBAAC,IAAD,CAAYC,SAAS,KACnB,6BACE,yBAAKhB,UAAU,SACb,kBAAC,IAAD,CAASA,UAAU,WAAWiB,GAAG,KAAjC,QACA,kBAAC,IAAD,CAASjB,UAAU,WAAWiB,GAAG,aAAjC,aAEF,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWE,U,GAV3BC,cCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.716b27ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.e760f6ff.pdf\";","module.exports = __webpack_public_path__ + \"static/media/headshot.913c691a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BTS-tile.02e16780.jpg\";","import React from \"react\";\nimport dcResume from \"../images/resume.pdf\";\nimport ProfileImage from \"../images/headshot.jpg\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport \"./Home.css\";\n\n\nfunction HomePage() {\n    return (\n        <div className=\"all-content\">\n            <div>\n                <h1 className=\"lat-text\">33.979600</h1>\n                <h1 className=\"long-text\">-117.727220</h1>\n            </div>\n            <div>\n                <img src={ProfileImage} alt=\"cat\" className=\"main-image\"></img>\n            </div>\n            <div className=\"main-content\">\n                <Row className=\"justify-content-md-center\">\n                    <p className=\"main-name\">DILLON COUCHOIS</p>\n                    <Col className=\"main-body\" xs={6} md={10}>\n                        <p>Front-End Web Developer with a background in Photography and Design with a keen eye for detail.\n                            Recently received a certificate in Full Stack Development from the University of California Irvine in Javascript, CSS, React.js and responsive web design.\n                            My aim is to bring a dynamic experience to each user accompanied by modern and compelling design. </p>\n                        <p className=\"contact-title\"> CONTACT </p>\n                            <a href={dcResume} target=\"_blank\" rel=\"noopener noreferrer\" className=\"c-btn\"> Resume </a>\n                             | | \n                            <a href=\"https://www.linkedin.com/in/dillon-couchois-45b2bb163/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"c-btn\"> LinkedIn </a>\n                             | | \n                            <a href=\"https://github.com/dcouchois\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"c-btn\"> Github </a>\n                    </Col>\n                </Row>\n            </div>\n            <div className=\"color-block\"></div>\n        </div>\n    )\n}\n\nexport default HomePage;","import React from \"react\";\nimport BTS from \"../../../images/BTS-tile.jpg\"\nimport Row from 'react-bootstrap/Row';\nimport \"./P1.css\";\n\n\nfunction P1Card() {\n    return (\n        <div>\n            <div className=\"image-tile\">\n                <a href=\"https://dcouchois.github.io/BreachTheSummit/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src={BTS} alt=\"cat\" className=\"bts-image\"></img></a>\n            </div>\n            <div className=\"bts-content\">\n                <Row className=\"description\" xs={6} md={10}>\n                    <p>\n                        A simple and effective app for locating the top ten trails near you for hiking. \n                    </p>\n                </Row>\n                <Row className=\"tech\">\n                    <ul>\n                        <li>JavaScript</li>\n                        <li>HTML5</li>\n                        <li>CSS3</li>\n                        <li>Materialize</li>\n                        <li>Google Maps API</li>\n                    </ul>\n                </Row>\n            </div>\n        </div>\n    )\n}\n\nexport default P1Card;","import React from \"react\";\nimport \"./ProjectPage.css\";\nimport Project1 from \"../Components/Cards/Project-1/Project-1\";\n\n\n\nfunction ProjectsPage () {  \n    return ( \n        <div className=\"main-div\">\n            <Project1 />\n        </div>\n    )\n}\n\nexport default ProjectsPage;","import React, { Component } from 'react';\nimport { HashRouter, Route, NavLink } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport Projects from \"./Pages/Projects\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <div>\n          <div className=\"links\">\n            <NavLink className=\"nav-link\" to=\"/\">Home</NavLink>\n            <NavLink className=\"nav-link\" to=\"/Projects\">Projects</NavLink>\n          </div>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/Projects\" component={Projects} />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}